stages:
  - build
  - deploy

backend-build:
  stage: build
  only:
    - ci-cd
  before_script:
    - echo 'backend build starts'
    - cd ./backend/ssafyBigswing/
    - chmod +x ./gradlew
  script:
    - ./gradlew clean build
    - docker build -t springboot . # Docker 이미지 빌드
  artifacts:
    name: "springboot"
    paths:
      - ./backend/ssafyBigswing/build/libs/*.jar
  tags:
    - ssafy
  when: manual

frontend-build:
  stage: build
  only:
    - ci-cd
  before_script:
    - echo 'frontend build starts'
    - cd ./frontend
  script:
    - docker build -t nextjs -f ./Dockerfile . # Docker 이미지 빌드
  tags:
    - ssafy
  when: manual

backend-deploy:
  stage: deploy
  only:
    - ci-cd
  before_script:
    - echo 'backend deploy starts'
    -| if [[ "$(docker ps -a -q -f "name=springboot-app" 2> /dev/null)" != "" ]]; then
      echo "There is a container."
      if [[ "$(docker container ls -q --filter "name=springboot-app" 2> /dev/null)" != "" ]]; then
      echo "Container is running."
      echo "Shut down and remove the container."
      docker stop $(docker container ls -q --filter "name=springboot-app")
      elif [[ "$(docker container ls -q --filter "name=springboot-app" 2> /dev/null)" == "" ]]; then
      echo "Container is not running."
      echo "remove the container."
      fi
      docker rm $springboot-app
      else
      echo "Container is missing."
      fi
  script:
    - docker run -d -p 8080:8080 --name springboot-app springboot # Docker 컨테이너 실행
  tags:
    - ssafy
  when: manual

frontend-deploy:
  stage: deploy
  only:
    - ci-cd
  before_script:
    - echo 'frontend deploy starts'
    -|  if [[ "$(docker ps -a -q -f "name=nextjs-app" 2> /dev/null)" != "" ]]; then
          echo "There is a container."
          if [[ "$(docker container ls -q --filter "name=nextjs-app" 2> /dev/null)" != "" ]]; then
            echo "Container is running."
            echo "Shut down and remove the container."
            docker stop $(docker container ls -q --filter "name=nextjs-app")
          elif [[ "$(docker container ls -q --filter "name=nextjs-app" 2> /dev/null)" == "" ]]; then
            echo "Container is not running."
            echo "remove the container."
          fi
        docker rm nextjs-app
        else
          echo "Container is missing."
        fi
  script:
    - sudo docker run -d -p 3000:3000 --name nextjs-app nextjs # Docker 컨테이너 실행
  tags:
    - ssafy
  when: manual
